#!/bin/bash
version="0.0.1"

errorBanner="$(cat <<-EOF
error during command or command not found.
type ./shell help for help."
EOF
)"

helpMessage="$(cat <<-EOF
HELP
----

help:
shkv help

set value:
shkv set key value

append:
shkv append key value

append with crlf between values:
shkv appendr key value

get key file full path:
shkv path key

EOF
)"

help () {
    echo "version: ${version}"
    echo "${helpMessage}"
    exit
}

#
# set key value
#
setVal () {
    local key="$1"
    local value="${*:2}"

    echo -n "${value}" > "${store}/${key}"
}

#
# append key value
#
append () {
    local key="$1"
    local value="${*:2}"

    echo  -n "${value}" >> "${store}/${key}"
}

#
# appendr key value
# (line between values)
#
appendr () {
    local key="$1"
    local value="${*:2}"

    echo "" >> "${store}/${key}"
    echo  -n "${value}" >> "${store}/${key}"
}

#
# get key
#
get () {
    local key="$1"

    cat "${store}/${key}"
}


#
# path key
#
path () {
    local key="$1"

    echo "${store}/${key}"
}

#
# BODY
#
main () {
[ -z ${command} ] && command="help"
    store=${SHKV_STORE}
    if [ "${command}" != "help" ] && [ "${store}" = "" ]; then
        echo "aborted. target store absolute path should be pointed with SHKV_STORE environment variable"
        exit
    fi
    mkdir -p "${store}"

    # command wrappers (when a command name is bash expression...)
    case "${command}" in
        set) commandFunctionName="setVal";;
    esac

    declare -F ${commandFunctionName} &> /dev/null && ${commandFunctionName} $@ || echo "${errorBanner}"
}

command="$1"
commandFunctionName="$1"
store=${SHKV_STORE}
cwd=$(pwd)

main ${@:2}
